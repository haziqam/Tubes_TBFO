CMA -> ,
CLN -> :
SCLN -> ;
CURL1 -> {
CURL2 -> }

# Statement Keyword
## Keyword Control Flow
RTN -> "return"
BRK -> "break"
CNTN -> "continue"
THR -> "throw"
IF -> "if"
ELSE -> "else"
SWTC -> "switch"
CASE -> "case"
DFLT -> "default"
TRY -> "try"
CATCH -> "catch"
FNLY -> "finally"

## Keyword Declaration
VAR -> "var"
LET -> "let"
CONST -> "const"

## Keyword Iterations
WHL -> "while"
FOR -> "for"

# STATEMENTS
STMT -> CURL1 BLK2 | THR E | IF IF2 | SWTC SWTC2 | TRY TRY2 | DCLR V | FOR FOR2 | WHL WHL2

STMTSW -> CURL1 BLKSW2 | THR E | IF IFSW2 | SWTC SWTC2 | TRY TRYSW2 | DCLR V | FOR FOR2 | WHL WHL2 | BRK

STMTL -> CURL1 BLKL2 | THR E | IF IFL2 | SWTCL SWTCL2 | TRY TRYL2 | DCLR V | FOR FOR2 | WHL WHL2 | BRK | CNTN

# BLOCK
BLK -> CURL1 BLK2 | CURL1 CURL2
BLK2 -> STMT BLK2 | STMT CURL2

BLKSW -> CURL1 BLKSW2
BLKSW2 -> STMTSW BLKSW2 | STMTSW CURL2

BLKL -> CURL1 BLKL2
BLKL2 -> STMTL BLKL2 | STMTL CURL2

# Control Flow
## THROW
THR -> THR E

## IF
IF1 -> IF IF2
IF2 -> E2 IF3
IF3 -> E IF4
IF4 -> E4 IF5 | E4 STMT
IF5 -> STMT IF6
IF6 -> ELSE STMT

IFSW1 -> IF IFSW2
IFSW2 -> E2 IFSW3
IFSW3 -> E IFSW4
IFSW4 -> E4 IFSW5 | E4 STMTSW
IFSW5 -> STMTSW IFSW6
IFSW6 -> ELSE STMTSW

IFL1 -> IF IFL2
IFL2 -> E2 IFL3
IFL3 -> E IFL4
IFL4 -> E4 IFL5 | E4 STMTL
IFL5 -> STMTL IFL6
IFL6 -> ELSE STMTL

## SWITCH
SWTC1 -> SWTC SWTC2
SWTC2 -> E2 SWTC3
SWTC3 -> E SWTC4
SWTC4 -> E4 SWTC5 | CMA SWTC3
SWTC5 -> CURL1 SWTC6
SWTC6 -> CASE SWTC7 | DEFAULT SWTC11
SWTC7 -> E SWTC8
SWTC8 -> CLN SWTC9
SWTC9 -> STMTSW SWTC6 | STMTSW CURL2
SWTC10 -> CASE SWTC11
SWTC11 -> E SWTC12
SWTC12 -> CLN SWTC13
SWTC13 -> STMTSW SWTC10 | STMTSW CURL2

SWTCL1 -> SWTCL SWTCL2
SWTCL2 -> E2 SWTCL3
SWTCL3 -> E SWTCL4
SWTCL4 -> E4 SWTCL5 | CMA SWTCL3
SWTCL5 -> CURL1 SWTCL6
SWTCL6 -> CASE SWTCL7 | DEFAULT SWTCL11
SWTCL7 -> E SWTCL8
SWTCL8 -> CLN SWTCL9
SWTCL9 -> STMTL SWTCL6 | STMTL CURL2
SWTCL10 -> CASE SWTCL11
SWTCL11 -> E SWTCL12
SWTCL12 -> CLN SWTCL13
SWTCL13 -> STMTL SWTCL10 | STMTL CURL2

## TRY - CATCH
TRY1 -> TRY TRY2
TRY2 -> BLK TRY3
TRY3 -> CATCH BLK | CATCH TRY4 | CATCH TRY8 | FNLY BLK
TRY4 -> E2 TRY5
TRY5 -> V TRY6
TRY7 -> E4 BLK | E4 TRY8
TRY8 -> BLK TRY9
TRY9 -> FNLY BLK

TRYSW1 -> TRY TRYSW2
TRYSW2 -> BLKSW TRYSW3
TRYSW3 -> CATCH BLKSW | CATCH TRYSW4 | CATCH TRYSW8 | FNLY BLKSW
TRYSW4 -> E2 TRYSW5
TRYSW5 -> V TRYSW6
TRYSW7 -> E4 BLKSW | E4 TRYSW8
TRYSW8 -> BLKSW TRYSW9
TRYSW9 -> FNLY BLKSW

TRYL1 -> TRY TRYL2
TRYL2 -> BLKL TRYL3
TRYL3 -> CATCH BLKL | CATCH TRYL4 | CATCH TRYL8 | FNLY BLKL
TRYL4 -> E2 TRYL5
TRYL5 -> V TRYL6
TRYL7 -> E4 BLKL | E4 TRYL8
TRYL8 -> BLKL TRYL9
TRYL9 -> FNLY BLKL

# Declaration
DCLR -> VAR V | LET V | CONST V

# Iterations
## FOR
FOR1 -> FOR FOR2
FOR2 -> E2 FOR3 | E2 FOR4
FOR3 -> E FOR4
FOR4 -> SCLN FOR5 | SCLN FOR6
FOR5 -> E FOR6 | DCLR FOR6
FOR6 -> SCLN FOR7 | SCLN FOR8
FOR7 -> E FOR8
FOR8 -> E4 STMTL

## WHILE
WHL1 -> WHL WHL2
WHL2 -> E2 WHL3
WHL3 -> E WHL4
WHL4 -> E4 STMTL
